# Generated by Django 4.2.11 on 2024-04-30 05:25

import base.models.helpers
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cohort",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Popular name of the Cohort",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("year", models.IntegerField(default=base.models.helpers.current_year)),
            ],
        ),
        migrations.CreateModel(
            name="ConsentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "cohort",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.cohort",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Proband",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpr",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=10,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(
                        default=None,
                        null=True,
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "deathdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date of death",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("m", "Male"), ("f", "Female")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        choices=[("c", "Caucasian"), ("d", "Non-Caucasian")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("passive", "Passive"),
                            ("resting", "Resting"),
                            ("withdrawn", "Withdrawn before birth"),
                        ],
                        max_length=9,
                        null=True,
                    ),
                ),
                (
                    "birthaddress",
                    models.CharField(
                        choices=[("urban", "Urban"), ("rural", "Rural")],
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "reason_for_withdrawal",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", ""),
                            ("death", "Death"),
                            ("disabling_disease", "Disabling disease"),
                            ("emigration", "Emigration"),
                            ("no_specified_reason", "No specified reason"),
                            ("parental_lack_of_time", "Parental lack of time"),
                            ("emotional_distress", "Emotional distress"),
                            ("social", "Social"),
                            ("unreachable", "Unreachable"),
                            ("other_reasons", "Other reasons"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "passive_data",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="First day of passivity",
                    ),
                ),
                (
                    "copsac_id",
                    models.CharField(
                        default=None,
                        help_text="The COPSAC ID of the proband",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("reminder", models.TextField(blank=True, default=None, null=True)),
                ("proband_id", models.CharField(default=None, max_length=20)),
                ("parents_divorced", models.BooleanField(default=False)),
                (
                    "place_of_living",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "legal_guardian",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "date_of_divorce",
                    models.DateField(blank=True, default=None, null=True),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.cohort",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruitingCenter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        unique=True,
                    ),
                ),
                ("number", models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Relative",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpr",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(
                        default=None,
                        null=True,
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "deathdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date of death",
                    ),
                ),
                (
                    "atopic_father",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "allfood",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of food allergy?",
                        null=True,
                    ),
                ),
                (
                    "allinh",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of inhalant allergy?",
                        null=True,
                    ),
                ),
                (
                    "alliv",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of typeIV allergy?",
                        null=True,
                    ),
                ),
                (
                    "astdoc",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed asthma?",
                        null=True,
                    ),
                ),
                (
                    "asthist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of asthmetic symptoms?",
                        null=True,
                    ),
                ),
                (
                    "asthmamedication",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Daily asthma medication > 1 year?",
                        null=True,
                    ),
                ),
                (
                    "dermdoctor",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "dermhist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "dermmed",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Ever received medical treatment for Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "rhindoctor",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "rhinhist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "rhinmed",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Ever received medical treatment for Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "twin",
                    models.CharField(
                        blank=True,
                        choices=[(None, "None"), ("A", "Twin A"), ("B", "Twin B")],
                        default=None,
                        max_length=1,
                        null=True,
                    ),
                ),
                ("comments", models.TextField(default=None, null=True)),
                (
                    "old_rel_id",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "relation_type",
                    models.CharField(
                        choices=[
                            ("father", "Father"),
                            ("second_father", "Second father"),
                            ("non_bio_father", "Non-biological father"),
                            ("stepfather", "Stepfather"),
                            ("mother", "Mother"),
                            ("second_mother", "Second mother"),
                            ("non_bio_mother", "Non-biological mother"),
                            ("stepmother", "Stepmother"),
                            ("sibling", "Sibling"),
                            ("same_father", "Half-sibling, same father"),
                            ("same_mother", "Half-sibling, same mother"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=14,
                    ),
                ),
                (
                    "lock_status",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="Indicate Quality Status. Locked or Qualitychecks",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Is this relative deleted?",
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Proband",
                        to="base.proband",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="proband",
            name="recruitingcenter",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="base.recruitingcenter",
            ),
        ),
        migrations.AddField(
            model_name="proband",
            name="site",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="base.site",
            ),
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today,
                        verbose_name="Date of note",
                    ),
                ),
                ("note", models.TextField(default="")),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicate whether this data should be deleted.",
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.proband",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalSite",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical site",
                "verbose_name_plural": "historical sites",
                "db_table": "zz_base_site",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRelative",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpr",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(
                        default=None,
                        null=True,
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "deathdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date of death",
                    ),
                ),
                (
                    "atopic_father",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "allfood",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of food allergy?",
                        null=True,
                    ),
                ),
                (
                    "allinh",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of inhalant allergy?",
                        null=True,
                    ),
                ),
                (
                    "alliv",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of typeIV allergy?",
                        null=True,
                    ),
                ),
                (
                    "astdoc",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed asthma?",
                        null=True,
                    ),
                ),
                (
                    "asthist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of asthmetic symptoms?",
                        null=True,
                    ),
                ),
                (
                    "asthmamedication",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Daily asthma medication > 1 year?",
                        null=True,
                    ),
                ),
                (
                    "dermdoctor",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "dermhist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "dermmed",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Ever received medical treatment for Dermatitis?",
                        null=True,
                    ),
                ),
                (
                    "rhindoctor",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Doctor diagnosed Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "rhinhist",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="History of Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "rhinmed",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Ever received medical treatment for Rhinitis?",
                        null=True,
                    ),
                ),
                (
                    "twin",
                    models.CharField(
                        blank=True,
                        choices=[(None, "None"), ("A", "Twin A"), ("B", "Twin B")],
                        default=None,
                        max_length=1,
                        null=True,
                    ),
                ),
                ("comments", models.TextField(default=None, null=True)),
                (
                    "old_rel_id",
                    models.IntegerField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                    ),
                ),
                (
                    "relation_type",
                    models.CharField(
                        choices=[
                            ("father", "Father"),
                            ("second_father", "Second father"),
                            ("non_bio_father", "Non-biological father"),
                            ("stepfather", "Stepfather"),
                            ("mother", "Mother"),
                            ("second_mother", "Second mother"),
                            ("non_bio_mother", "Non-biological mother"),
                            ("stepmother", "Stepmother"),
                            ("sibling", "Sibling"),
                            ("same_father", "Half-sibling, same father"),
                            ("same_mother", "Half-sibling, same mother"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        max_length=14,
                    ),
                ),
                (
                    "lock_status",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        help_text="Indicate Quality Status. Locked or Qualitychecks",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Is this relative deleted?",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical relative",
                "verbose_name_plural": "historical relatives",
                "db_table": "zz_base_relative",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRecruitingCenter",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=255,
                    ),
                ),
                ("number", models.IntegerField(blank=True, default=None, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical recruiting center",
                "verbose_name_plural": "historical recruiting centers",
                "db_table": "zz_base_recruitingcenter",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalProband",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpr",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default=None,
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "birthdate",
                    models.DateField(
                        default=None,
                        null=True,
                        verbose_name="Date of birth",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Name of proband",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "deathdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date of death",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("m", "Male"), ("f", "Female")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        choices=[("c", "Caucasian"), ("d", "Non-Caucasian")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("passive", "Passive"),
                            ("resting", "Resting"),
                            ("withdrawn", "Withdrawn before birth"),
                        ],
                        max_length=9,
                        null=True,
                    ),
                ),
                (
                    "birthaddress",
                    models.CharField(
                        choices=[("urban", "Urban"), ("rural", "Rural")],
                        max_length=5,
                        null=True,
                    ),
                ),
                (
                    "reason_for_withdrawal",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", ""),
                            ("death", "Death"),
                            ("disabling_disease", "Disabling disease"),
                            ("emigration", "Emigration"),
                            ("no_specified_reason", "No specified reason"),
                            ("parental_lack_of_time", "Parental lack of time"),
                            ("emotional_distress", "Emotional distress"),
                            ("social", "Social"),
                            ("unreachable", "Unreachable"),
                            ("other_reasons", "Other reasons"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "passive_data",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="First day of passivity",
                    ),
                ),
                (
                    "copsac_id",
                    models.CharField(
                        db_index=True,
                        default=None,
                        help_text="The COPSAC ID of the proband",
                        max_length=50,
                    ),
                ),
                ("reminder", models.TextField(blank=True, default=None, null=True)),
                ("proband_id", models.CharField(default=None, max_length=20)),
                ("parents_divorced", models.BooleanField(default=False)),
                (
                    "place_of_living",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "legal_guardian",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "date_of_divorce",
                    models.DateField(blank=True, default=None, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.cohort",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recruitingcenter",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.recruitingcenter",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical proband",
                "verbose_name_plural": "historical probands",
                "db_table": "zz_base_proband",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalNote",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today,
                        verbose_name="Date of note",
                    ),
                ),
                ("note", models.TextField(default="")),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Indicate whether this data should be deleted.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical note",
                "verbose_name_plural": "historical notes",
                "db_table": "zz_base_probandnote",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalEducationalInstitution",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("nursery", "Nursery"),
                            ("daycare", "Daycare"),
                            ("kindergarten", "Kindergarten"),
                            ("forest_kindergarten", "Forest kindergarten"),
                            ("school", "School"),
                            ("after_school_care", "After school care"),
                            ("private", "Private"),
                            ("other", "Other"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=255,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("province", models.CharField(blank=True, max_length=255)),
                ("postcode", models.CharField(blank=True, max_length=10)),
                ("country", models.CharField(default="DK", max_length=22)),
                ("phone", models.CharField(blank=True, max_length=72)),
                ("dog", models.BooleanField(null=True)),
                ("cat", models.BooleanField(null=True)),
                ("other_furred_animal", models.BooleanField(null=True)),
                ("comments", models.CharField(blank=True, max_length=1000)),
                ("is_deleted", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical educational institution",
                "verbose_name_plural": "historical educational institutions",
                "db_table": "zz_base_institution",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalConsentType",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.cohort",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical consent type",
                "verbose_name_plural": "historical consent types",
                "db_table": "zz_base_consenttype",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalConsent",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        null=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("ongoing", "Ongoing"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=9,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_consent_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.consenttype",
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical consent",
                "verbose_name_plural": "historical consents",
                "db_table": "zz_base_consent",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCohort",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Popular name of the Cohort",
                        max_length=50,
                    ),
                ),
                ("year", models.IntegerField(default=base.models.helpers.current_year)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical cohort",
                "verbose_name_plural": "historical cohorts",
                "db_table": "zz_base_cohort",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAddress",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                ("primary_home", models.BooleanField(default=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "home_type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("farm", "Farm"),
                            ("holiday_cottage", "Holiday cottage"),
                            ("house", "House"),
                            ("terrace_house", "Terrace house"),
                        ],
                        max_length=15,
                    ),
                ),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("province", models.CharField(blank=True, max_length=255)),
                ("country", models.CharField(default="DK", max_length=22)),
                ("postcode", models.CharField(blank=True, max_length=10)),
                ("phone", models.CharField(blank=True, max_length=72)),
                ("cellphone_proband", models.CharField(blank=True, max_length=72)),
                ("cellphone_father", models.CharField(blank=True, max_length=72)),
                ("cellphone_mother", models.CharField(blank=True, max_length=72)),
                ("workphone1", models.CharField(blank=True, max_length=72)),
                ("workphone2", models.CharField(blank=True, max_length=72)),
                ("email_father", models.EmailField(blank=True, max_length=254)),
                ("email_mother", models.EmailField(blank=True, max_length=254)),
                ("abcmailaddress", models.EmailField(blank=True, max_length=254)),
                (
                    "lives_with",
                    models.CharField(
                        choices=[
                            ("both_parents", "Both parents"),
                            ("father", "Father"),
                            ("mother", "Mother"),
                            ("no_parents", "None of the biological parents"),
                        ],
                        max_length=255,
                    ),
                ),
                ("comments", models.CharField(blank=True, max_length=1000)),
                ("is_deleted", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical address",
                "verbose_name_plural": "historical addresses",
                "db_table": "zz_base_address",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="EducationalInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("nursery", "Nursery"),
                            ("daycare", "Daycare"),
                            ("kindergarten", "Kindergarten"),
                            ("forest_kindergarten", "Forest kindergarten"),
                            ("school", "School"),
                            ("after_school_care", "After school care"),
                            ("private", "Private"),
                            ("other", "Other"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=255,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("province", models.CharField(blank=True, max_length=255)),
                ("postcode", models.CharField(blank=True, max_length=10)),
                ("country", models.CharField(default="DK", max_length=22)),
                ("phone", models.CharField(blank=True, max_length=72)),
                ("dog", models.BooleanField(null=True)),
                ("cat", models.BooleanField(null=True)),
                ("other_furred_animal", models.BooleanField(null=True)),
                ("comments", models.CharField(blank=True, max_length=1000)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "proband",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.proband",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Consent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        null=True,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("ongoing", "Ongoing"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=9,
                    ),
                ),
                (
                    "fk_consent_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.consenttype",
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.proband",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("primary_home", models.BooleanField(default=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "home_type",
                    models.CharField(
                        choices=[
                            ("apartment", "Apartment"),
                            ("farm", "Farm"),
                            ("holiday_cottage", "Holiday cottage"),
                            ("house", "House"),
                            ("terrace_house", "Terrace house"),
                        ],
                        max_length=15,
                    ),
                ),
                ("street", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("province", models.CharField(blank=True, max_length=255)),
                ("country", models.CharField(default="DK", max_length=22)),
                ("postcode", models.CharField(blank=True, max_length=10)),
                ("phone", models.CharField(blank=True, max_length=72)),
                ("cellphone_proband", models.CharField(blank=True, max_length=72)),
                ("cellphone_father", models.CharField(blank=True, max_length=72)),
                ("cellphone_mother", models.CharField(blank=True, max_length=72)),
                ("workphone1", models.CharField(blank=True, max_length=72)),
                ("workphone2", models.CharField(blank=True, max_length=72)),
                ("email_father", models.EmailField(blank=True, max_length=254)),
                ("email_mother", models.EmailField(blank=True, max_length=254)),
                ("abcmailaddress", models.EmailField(blank=True, max_length=254)),
                (
                    "lives_with",
                    models.CharField(
                        choices=[
                            ("both_parents", "Both parents"),
                            ("father", "Father"),
                            ("mother", "Mother"),
                            ("no_parents", "None of the biological parents"),
                        ],
                        max_length=255,
                    ),
                ),
                ("comments", models.CharField(blank=True, max_length=1000)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "proband",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.proband",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "addresses",
            },
        ),
        migrations.AddConstraint(
            model_name="consenttype",
            constraint=models.UniqueConstraint(
                fields=("name", "cohort"),
                name="unique_consent_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="consent",
            constraint=models.UniqueConstraint(
                fields=("fk_consent_type", "fk_proband"),
                name="unique_consent",
            ),
        ),
    ]
