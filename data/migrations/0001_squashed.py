# Generated by Django 4.2.11 on 2024-04-30 05:18

import data.models.dataset
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_jsonform.models.fields
import simple_history.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("base", "0001_squashed"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Column",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="If specified, the order in which the column is displayed in the frontend.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.SlugField(
                        help_text="Name of the column, keep the dataset in mind when naming",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Human readable name or abbreviation, etc.",
                        max_length=50,
                    ),
                ),
                (
                    "org_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Original name of data",
                        max_length=100,
                    ),
                ),
                (
                    "col_format",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Format of data in given column",
                        max_length=50,
                    ),
                ),
                (
                    "caption_column",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Very short description of this column",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Description",
                        max_length=1000,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Unit data in column",
                        max_length=50,
                    ),
                ),
                (
                    "is_meta",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Specifies if the data is meta data",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "released",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date of release",
                    ),
                ),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(
                        help_text="Title of dataset, human readable, can be changed",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.SlugField(
                        help_text="Name of dataset, slug field, should never change",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "base_project",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Project in mind when creating dataset",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Helpful tags for data search",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("committed", "Committed"),
                            ("planned", "Planned"),
                        ],
                        default="none",
                        help_text="Status of dataset",
                        max_length=15,
                    ),
                ),
                (
                    "status_choices",
                    django_jsonform.models.fields.JSONField(
                        default=data.models.dataset.Dataset.default_status_choices,
                    ),
                ),
                ("use_finishdate", models.BooleanField(default=True)),
                (
                    "data_schema",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Read the <a href='https://django-jsonform.readthedocs.io/en/stable/schema.html' target='_blank'>Schema Guide</a>",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Where does the dataset stem from i.e a  research group",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Descripton of explanatory variables",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "implocation",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="What is this?",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "validation",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "cleaning",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Details to keep in mind using the dataset",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "form",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Layout and behavior of end user form",
                    ),
                ),
                (
                    "xtract_sql",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="SQL code extracting data",
                        null=True,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The person creating the dataset",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.cohort",
                    ),
                ),
                (
                    "contact_pers",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="Contact person(s) for the dataset",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_pers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Examination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lock_status",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Open"), (1, "Locked"), (2, "Validation")],
                        default=0,
                        help_text="Indicate Quality Status. Locked or Qualitychecks",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Indicate whether this data has been or should be deleted.",
                        null=True,
                    ),
                ),
                (
                    "startdate",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="Start date",
                    ),
                ),
                (
                    "finishdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Finish date",
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=1000,
                    ),
                ),
                ("exceptional_values", models.BooleanField(default=False)),
                (
                    "data",
                    django_jsonform.models.fields.JSONField(blank=True, default=dict),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("planned", "Planned"),
                            ("incomplete", "Incomplete"),
                            ("not_applicable", "Not applicable"),
                            ("ongoing", "Ongoing"),
                            ("not_done", "Not done"),
                            ("unavailable", "Unavailable"),
                            ("defective", "Defective"),
                        ],
                        db_index=True,
                        default="none",
                        max_length=15,
                    ),
                ),
                (
                    "old_peid",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="Old id number will be deleted",
                        null=True,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.dataset",
                    ),
                ),
            ],
            options={
                "ordering": ["-fk_visit__id"],
            },
        ),
        migrations.CreateModel(
            name="HelpDoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("file", models.FileField(upload_to="")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Status of SOP",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The person creating the SOP",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisitType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default=None,
                        help_text="Name of visit",
                        max_length=50,
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Helpful comments regarding this visit",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("committed", "Committed"),
                            ("planned", "Planned"),
                        ],
                        default="none",
                        help_text="Status of visit",
                        max_length=15,
                    ),
                ),
                ("year", models.IntegerField(blank=True, default=None, null=True)),
                ("month", models.IntegerField(blank=True, default=None, null=True)),
                ("days", models.IntegerField(blank=True, default=None, null=True)),
                (
                    "adhoc",
                    models.BooleanField(
                        default=0,
                        help_text="True if this visit was Ad Hoc",
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.cohort",
                    ),
                ),
            ],
            options={
                "ordering": ["-year", "-month", "-days", "name"],
            },
        ),
        migrations.CreateModel(
            name="Visit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Indicate whether this data has been or should be deleted.",
                        null=True,
                    ),
                ),
                (
                    "old_pvid",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="Old id number will be deleted",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("planned", "Planned"),
                            ("unavailable", "Unavailable"),
                        ],
                        db_index=True,
                        default="none",
                        max_length=15,
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=1000,
                    ),
                ),
                ("visit_date", models.DateField(blank=True, default=None, null=True)),
                (
                    "fk_proband",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.proband",
                    ),
                ),
                (
                    "fk_secondary_visit_type",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SecondaryVisitType",
                        to="data.visittype",
                    ),
                ),
                (
                    "fk_visit_type",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrimaryVisitType",
                        to="data.visittype",
                    ),
                ),
            ],
            options={
                "ordering": ["fk_visit_type__id", "visit_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalVisitType",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default=None,
                        help_text="Name of visit",
                        max_length=50,
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Helpful comments regarding this visit",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("committed", "Committed"),
                            ("planned", "Planned"),
                        ],
                        default="none",
                        help_text="Status of visit",
                        max_length=15,
                    ),
                ),
                ("year", models.IntegerField(blank=True, default=None, null=True)),
                ("month", models.IntegerField(blank=True, default=None, null=True)),
                ("days", models.IntegerField(blank=True, default=None, null=True)),
                (
                    "adhoc",
                    models.BooleanField(
                        default=0,
                        help_text="True if this visit was Ad Hoc",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.cohort",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical visit type",
                "verbose_name_plural": "historical visit types",
                "db_table": "zz_data_visittype",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalVisit",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Indicate whether this data has been or should be deleted.",
                        null=True,
                    ),
                ),
                (
                    "old_pvid",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="Old id number will be deleted",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("planned", "Planned"),
                            ("unavailable", "Unavailable"),
                        ],
                        db_index=True,
                        default="none",
                        max_length=15,
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=1000,
                    ),
                ),
                ("visit_date", models.DateField(blank=True, default=None, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_proband",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.proband",
                    ),
                ),
                (
                    "fk_secondary_visit_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.visittype",
                    ),
                ),
                (
                    "fk_visit_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.visittype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical visit",
                "verbose_name_plural": "historical visits",
                "db_table": "zz_data_visit",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHelpDoc",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("file", models.TextField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Status of SOP",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("date", models.DateField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        help_text="The person creating the SOP",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical help doc",
                "verbose_name_plural": "historical help docs",
                "db_table": "zz_data_helpdoc",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHelpData",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lookup_value",
                    models.CharField(
                        default="?",
                        help_text="The value your search depends on. e.g. drugcode from table dict_drug",
                        max_length=50,
                    ),
                ),
                (
                    "col_1",
                    models.CharField(
                        default="?",
                        help_text="Main value-column that corresponds to the lookup_value, e.g drugname from dict_drug.",
                        max_length=1000,
                    ),
                ),
                ("col_2", models.CharField(blank=True, default="?", max_length=50)),
                (
                    "old_id",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The old oracle-database-id of this row",
                        max_length=10,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.dataset",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical help data",
                "verbose_name_plural": "historical help datas",
                "db_table": "zz_data_helpdata",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalExamination",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lock_status",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Open"), (1, "Locked"), (2, "Validation")],
                        default=0,
                        help_text="Indicate Quality Status. Locked or Qualitychecks",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Indicate whether this data has been or should be deleted.",
                        null=True,
                    ),
                ),
                (
                    "startdate",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="Start date",
                    ),
                ),
                (
                    "finishdate",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Finish date",
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=1000,
                    ),
                ),
                ("exceptional_values", models.BooleanField(default=False)),
                (
                    "data",
                    django_jsonform.models.fields.JSONField(blank=True, default=dict),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("completed", "Completed"),
                            ("planned", "Planned"),
                            ("incomplete", "Incomplete"),
                            ("not_applicable", "Not applicable"),
                            ("ongoing", "Ongoing"),
                            ("not_done", "Not done"),
                            ("unavailable", "Unavailable"),
                            ("defective", "Defective"),
                        ],
                        db_index=True,
                        default="none",
                        max_length=15,
                    ),
                ),
                (
                    "old_peid",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="Old id number will be deleted",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.dataset",
                    ),
                ),
                (
                    "fk_visit",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.visit",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical examination",
                "verbose_name_plural": "historical examinations",
                "db_table": "zz_data_examination",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDatasetVisitTypeRel",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        help_text="If date not filled, default value is current date.",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.dataset",
                    ),
                ),
                (
                    "fk_helpdoc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.helpdoc",
                    ),
                ),
                (
                    "fk_visit_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.visittype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical dataset visit type rel",
                "verbose_name_plural": "historical dataset visit type rels",
                "db_table": "zz_data_datasetvisittyperel",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDataset",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "released",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date of release",
                    ),
                ),
                ("updated", models.DateTimeField(blank=True, editable=False)),
                (
                    "title",
                    models.CharField(
                        help_text="Title of dataset, human readable, can be changed",
                        max_length=255,
                    ),
                ),
                (
                    "name",
                    models.SlugField(
                        help_text="Name of dataset, slug field, should never change",
                        max_length=100,
                    ),
                ),
                (
                    "base_project",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Project in mind when creating dataset",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Helpful tags for data search",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("none", ""),
                            ("committed", "Committed"),
                            ("planned", "Planned"),
                        ],
                        default="none",
                        help_text="Status of dataset",
                        max_length=15,
                    ),
                ),
                (
                    "status_choices",
                    django_jsonform.models.fields.JSONField(
                        default=data.models.dataset.Dataset.default_status_choices,
                    ),
                ),
                ("use_finishdate", models.BooleanField(default=True)),
                (
                    "data_schema",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Read the <a href='https://django-jsonform.readthedocs.io/en/stable/schema.html' target='_blank'>Schema Guide</a>",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Where does the dataset stem from i.e a  research group",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Descripton of explanatory variables",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "implocation",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="What is this?",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "validation",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "cleaning",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Details to keep in mind using the dataset",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "form",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Layout and behavior of end user form",
                    ),
                ),
                (
                    "xtract_sql",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="SQL code extracting data",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        help_text="The person creating the dataset",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="base.cohort",
                    ),
                ),
                (
                    "contact_pers",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        help_text="Contact person(s) for the dataset",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical dataset",
                "verbose_name_plural": "historical datasets",
                "db_table": "zz_data_dataset",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalColumn",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_order",
                    models.IntegerField(
                        blank=True,
                        default=None,
                        help_text="If specified, the order in which the column is displayed in the frontend.",
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.SlugField(
                        help_text="Name of the column, keep the dataset in mind when naming",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Human readable name or abbreviation, etc.",
                        max_length=50,
                    ),
                ),
                (
                    "org_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Original name of data",
                        max_length=100,
                    ),
                ),
                (
                    "col_format",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Format of data in given column",
                        max_length=50,
                    ),
                ),
                (
                    "caption_column",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Very short description of this column",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Description",
                        max_length=1000,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Unit data in column",
                        max_length=50,
                    ),
                ),
                (
                    "is_meta",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Specifies if the data is meta data",
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.dataset",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical column",
                "verbose_name_plural": "historical columns",
                "db_table": "zz_data_column",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCell",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True,
                        blank=True,
                        db_index=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=2000,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "fk_column",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.column",
                    ),
                ),
                (
                    "fk_examination",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.examination",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical cell",
                "verbose_name_plural": "historical cells",
                "db_table": "zz_data_cell",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HelpData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lookup_value",
                    models.CharField(
                        default="?",
                        help_text="The value your search depends on. e.g. drugcode from table dict_drug",
                        max_length=50,
                    ),
                ),
                (
                    "col_1",
                    models.CharField(
                        default="?",
                        help_text="Main value-column that corresponds to the lookup_value, e.g drugname from dict_drug.",
                        max_length=1000,
                    ),
                ),
                ("col_2", models.CharField(blank=True, default="?", max_length=50)),
                (
                    "old_id",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="The old oracle-database-id of this row",
                        max_length=10,
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.dataset",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="examination",
            name="fk_visit",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="data.visit",
            ),
        ),
        migrations.CreateModel(
            name="DatasetVisitTypeRel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        default=datetime.date.today,
                        help_text="If date not filled, default value is current date.",
                    ),
                ),
                (
                    "fk_dataset",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.dataset",
                    ),
                ),
                (
                    "fk_helpdoc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.helpdoc",
                    ),
                ),
                (
                    "fk_visit_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.visittype",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="dataset",
            name="mtm_visit",
            field=models.ManyToManyField(
                through="data.DatasetVisitTypeRel",
                to="data.visittype",
            ),
        ),
        migrations.AddField(
            model_name="column",
            name="fk_dataset",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="data.dataset",
            ),
        ),
        migrations.CreateModel(
            name="Cell",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=2000,
                    ),
                ),
                (
                    "fk_column",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.column",
                    ),
                ),
                (
                    "fk_examination",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.examination",
                    ),
                ),
            ],
            options={
                "ordering": ["fk_examination"],
            },
        ),
        migrations.AddIndex(
            model_name="visit",
            index=models.Index(fields=["id"], name="data_visit_id_adae76_idx"),
        ),
        migrations.AddIndex(
            model_name="examination",
            index=models.Index(
                fields=["fk_visit"],
                name="data_examin_fk_visi_86163e_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="datasetvisittyperel",
            constraint=models.UniqueConstraint(
                fields=("fk_dataset", "fk_visit_type"),
                name="unique_dataset_visit_type",
            ),
        ),
        migrations.AddConstraint(
            model_name="column",
            constraint=models.UniqueConstraint(
                fields=("fk_dataset", "name"),
                name="unique_dataset_column",
            ),
        ),
        migrations.AddIndex(
            model_name="cell",
            index=models.Index(
                fields=["fk_column", "fk_examination"],
                name="main_datapoint",
            ),
        ),
        migrations.AddConstraint(
            model_name="cell",
            constraint=models.UniqueConstraint(
                fields=("fk_column", "fk_examination"),
                name="unique_column_and_examination",
            ),
        ),
    ]
